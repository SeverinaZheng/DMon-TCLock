SEC("lock_qspinlock")
int custom_lock_to_release(struct __lock_policy_args *args)
{
	unsigned long key = args->lock_ptr;
	struct data_t *data_ptr;
	data_ptr = bpf_map_lookup_elem(&hash_map, &key);

	if(!data_ptr){
		/** should never happen */
		bpf_printk("release without acquired\n");
		return 0;
	}

	// holdtime stat
	unsigned long holdtime = bpf_ktime_get_ns() - args->hold_start;
	data_ptr->holdtime.total += holdtime;
	data_ptr->holdtime.min = data_ptr->holdtime.min > holdtime ? holdtime : data_ptr->holdtime.min;
	data_ptr->holdtime.max = data_ptr->holdtime.max < holdtime ? holdtime : data_ptr->holdtime.max;

	return 0;
}
